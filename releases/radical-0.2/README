SUMMARY:

Random Addition Concatenation Analysis (RADICAL) is a phylogenomic method 
that rigorously addresses the effects of partitioning and combining 
genes. RADICAL operates by sequentially concatenating randomly chosen 
gene partitions starting with a single gene partition and ending with 
the entire genomic dataset. A phylogenetic tree is built for every 
successive addition and the entire process is repeated creating multiple 
random concatenation paths. The result is a library of trees representing 
a large variety of differently sized, random gene partitions. This 
library can then be mined to identify unique topologies, assess overall 
agreement, and measure support for different trees. 

SCRIPTS and MODULES:
RADICAL is written in PERL.

run_radical_forked.pl and run_radical_parallel.pl are runner scripts
that execute the RADICAL process on a multicore machine or SGE cluster,
respectively.

radical_setup.pl, radical_run.pl, radical_check.pl, 
radical_topos.pl, and radical_pp.pl are scripts
that setup, run, check (for statistics that satisfy an abort),
mine topologies, and parse results to create RADICAL reports,
respectively.

ls_concat.pl is a script that will calculate the likelihood support of a 
given partition in its greater genomic context.

Radical.pm contains methods that run various RADICAL functions.
Ls.pm contains methods that run various likelihood support functions.

loess.R is an R script that excutes local polynomial regression fitting 
(LOESS curve averaging) useful if the RADICAL curve is sampled with a step.

INSTALLATION:
To install RADICAL, copy the scipts in bin/ to your $PATH, and the modules in 
lib/ to your $PERL5LIB.

DEPENDENCIES:
RADICAL requires that the user select and install at least one of two tree 
building programs: PAUP for a parsimony approach and/or RAxML for a 
maximum likelihood approach. Note that other tree building programs can be 
used and easily handled if additional runners and parsers are added to 
the Radical.pm library.

RADICAL requires bioperl.
RADICAL requires Statistics::Descriptive
RADICAL requires Parallel::ForkManager
RADICAL requires Bio::Phylo

CONFIGURATION:
Example configuration files for ML and parsimony can be found in the 
distribution directory.
	MODE should be set as either PASIMONY or ML.
	TREECOMMAND is a string of parameters input to either paup or RAxML.
	CONTREECOMMAND is the paup consensus tree command string. 
	MAXTREES specifies the treelimit in a parsimony search.
	SAMPLES specifies the number of RADICAL replicates.
	SECTIONS specifies the sections along the RADICAL curve to output 
		submatrices for partitions selected to that point
		for that repetition. If this is a comma separated string,
		numbers are treated literally. If it is a single number, 
		submatrices are output at every quantile specified by 
		that number.
	ROOT is the outgroup taxon.
	RSCRIPT specifies the location of loess.R.
	SPAN is a loess specific parameter that specifies the degree of 
		smoothing.
	ABORT_FRAC specifies the fraction of trees necessary to abort 
		a RADICAL run if checking is selected.
	ABORT_INT specifies the number of consecutive concatenation points 
		that must statisfy ABORT_FRAC before abortion.
	

RUNNING:
See usage instructions accompanying each script. A successful run will require
the launch of either run_radical_forked.pl or run_radical_parallel.pl only, as 
long as all the other components are correctly installed.

OUTPUT:
topology.distribution is a text file containing all the unique topologies 
generated by RADICAL given as a topology index, topology, and frequency.
 
The output directory contains a number of sub-directories containing the 
RADICAL results.

cmds/ contains all the commands/partitions used to create the RADICAL curve 
across all replicates. Files are in the form x.y.cmds where x is the replicate
and y is the number of partitions added to that point.

logs/ contains the output from tree building. 

trees/ contains the topologies generated from each command.

sub-matrices/ contains the sub-matrices sampled at the various points on the 
RADICAL curve specified by the SECTIONS configuration parameter.

output/ contains intermediate output useful for debugging.

consensus/ contains the majority rules consensus tree calculated for all 
trees in the RADICAL library and for trees within various sections as specified 
by the user.

summaries/ contains files that outline node frequency for sections specified 
on the RADICAL curve. It also contains all the final RADICAL output data. 
If the user requested a summary for each unique topology, subdirectories are 
given according to the index number in topology.distribution. If only 
a single topology is being used as the reference, the summary subdirectory 
will be named according to the treefile input. Each summary subdirectory 
contains the following files:
	0. annotated.tre: a newick tree of the topology assayed with node 
		labels containing information about the fixation point
		and AUC in the format "fixpt|AUC". If the fixation point
		is a degradation point, the first number is marked with a '*'.
		Note that this file will only be generated if an input topology 
		was specified.
	1. nodes: an internal node numbering system for the reference topology.
	2. coords.out: a file showing the tree agreement between the reference
		topology and the trees in the RADICAL library. The first column
		is the fraction of the total gene set, the second column, 
		overall tree CFI, and the remaining columns (3 to x) are node 
		specific consistencies where columns correspond to the node 
		numbers in the nodes file from lowest to highest.
	3. coords_loess.out: same as coords but using LOESS curve averaging.
	4. auc.coords: Gives the area under the curve for all RADICAL rep.
		RADICAL replicates are specified in the first column, the AUC
		for the total tree is given in the second column, and AUCs
		fore each internal node are given in the remaining columns.
	5. auc.coords_loess: same as auc.coords but using LOESS curve averaging.
	6. integration.out: Gives the avarege overall AUC for the whole tree
		("0"), and each node ("1 - x") using the straight datapoints 
		(column 2) and the LOESS datapoints (column 3).
	7. fixation.points: Provides fixation and degredation points for the 
		entire tree and each node. Column 1 specifies the node (taxa 
		string) or tree ("CFI"). Column 2 is the starting consistency.
		Column 3 is the ending consistency. Column 4 is the number 
		of partitions required to achieve either a consistency of 
		0 or 1 (degredation or fixation, respectively). And Column 5 
		is the fraction of the total partitions available required to 
		reach fixation.
	8. summary.X tabulates the dynamics of consistency for every RADICAL 
		replicate where X is the node number as specified in the nodes 
		file and "0" signifies the analysis of the whole tree. 

